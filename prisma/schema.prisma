generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  username String @unique
  password String

  items          Item[]
  CharacterSheet CharacterSheet[]
}

enum ItemRarity {
  common
  uncommon
  rare
  legendary
  supreme
}

model Item {
  id Int @id @default(autoincrement())

  author   User? @relation(fields: [authorId], references: [id])
  authorId Int?

  rarity ItemRarity @default(common)

  title       String  @unique
  description String?

  damage             Int? @db.SmallInt
  adventurePointCost Int? @db.SmallInt

  characterSheets CharacterSheet[]
}

model CharacterSheet {
  id Int @id @default(autoincrement())

  name        String
  description String

  currentHitPoints       Int @db.SmallInt
  currentAdventurePoints Int @db.SmallInt

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int

  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  items     Item[]
  abilities Ability[]
}

model Role {
  id Int @id @default(autoincrement())

  title       String @unique
  description String

  characterSheets CharacterSheet[]
  learningPaths   LearningPath[]
}

model LearningPath {
  id Int @id @default(autoincrement())

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int

  title                 String                  @unique
  LearningPathOnAbility LearningPathOnAbility[]
}

model LearningPathOnAbility {
  learningPath   LearningPath @relation(fields: [learningPathId], references: [id])
  learningPathId Int

  ability   Ability @relation(fields: [abilityId], references: [id])
  abilityId Int

  order Int @default(autoincrement()) @db.SmallInt

  @@id([learningPathId, abilityId, order])
}

model Ability {
  id Int @id @default(autoincrement())

  title String @unique

  adventurePointCost Int?    @db.SmallInt
  rollTheDie         Boolean @default(false)

  LearningPathOnAbility LearningPathOnAbility[]
  characterSheets       CharacterSheet[]
}
